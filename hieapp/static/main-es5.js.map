{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/body/body.component.ts","webpack:///src/app/body/body.component.html","webpack:///src/app/body/index.ts","webpack:///src/app/data-basic/data-basic.component.ts","webpack:///src/app/data-basic/data-basic.component.html","webpack:///src/app/data-vis/data-vis.component.ts","webpack:///src/app/data-vis/data-vis.component.html","webpack:///src/app/filter-box/filter-box.component.ts","webpack:///src/app/filter-box/filter-box.component.html","webpack:///src/app/loginComponent/loginComponent.component.ts","webpack:///src/app/loginComponent/loginComponent.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","location","reload","error","message","statusText","users","firstName","lastName","username","password","permissionToWrite","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","getUsers","isLoggedIn","unauthorized","ok","user","find","x","token","get","idFromUrl","urlParts","split","parseInt","length","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","clone","setHeaders","Authorization","AlertService","subject","keepAfterRouteChange","events","subscribe","event","clear","asObservable","type","text","AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","post","config","apiUrl","setItem","stringify","removeItem","value","UserService","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","loggedIn","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BodyComponent","userService","loadAllUsers","getAll","DataBasicComponent","DataVisComponent","FilterBoxComponent","loginComponent","formBuilder","alertService","loading","submitted","loginForm","group","required","snapshot","invalid","login","f","data","controls","onSubmit","environment","production","bootstrapModule","catch","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","//prevents peopple from seeing content unless they are logged in\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","/*\r\nhandles when an HTTP request from the Angular app returns a error response. \r\nIf the error status is 401 Unauthorized the user is automatically logged out, \r\notherwise the error message is extracted from the HTTP error response and thrown \r\nso it can be caught and displayed by the component that initiated the request.\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","//temporary backend, so we can test login, etc, until we combine with the real backend\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\nlet users = [{ id: 1, firstName: 'Alice', lastName: 'Quintanilla', username: 'alicequint', password: 'test', permissionToWrite: true }];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n\r\n        }\r\n\r\n        // route functions\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        // helper functions\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","//this is a \"barrel file\"!\r\n//it re-exports components from these files so that other files can just import '.../_helpers'\r\nexport * from './fake-backend';\r\n\r\nexport * from './auth.guard';\r\nexport * from './jwt.interceptor';\r\nexport * from './error.interceptor';","/*Angular HTTP Interceptors allow you to intercept HTTP requests from your \r\nAngular app before they are sent to the backend, they can be used to modify \r\nrequests before they are sent as well as handle responses.\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","// from https://github.com/cornflourblue/angular-8-registration-login-example\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<any>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n        this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                if (this.keepAfterRouteChange) {\r\n                    // only keep for a single route change\r\n                    this.keepAfterRouteChange = false;\r\n                } else {\r\n                    // clear alert message\r\n                    this.clear();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n        this.keepAfterRouteChange = keepAfterRouteChange;\r\n        this.subject.next({ type: 'success', text: message });\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n        this.keepAfterRouteChange = keepAfterRouteChange;\r\n        this.subject.next({ type: 'error', text: message });\r\n    }\r\n\r\n    clear() {\r\n        // clear by calling subject.next() without parameters\r\n        this.subject.next();\r\n    }\r\n}","//this file is for authenticating login / logout\r\n\r\n// from https://github.com/cornflourblue/angular-8-registration-login-example-\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<any>;\r\n    public currentUser: Observable<any>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue() {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<any>(`${config.apiUrl}/users/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage and set current user to null\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}","export * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './alert.service';","//from https://github.com/cornflourblue/angular-8-registration-login-example\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //we dont know if we need any of this!?\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${config.apiUrl}/users`);\r\n    }\r\n\r\n    // register(user: User) {\r\n    //     return this.http.post(`${config.apiUrl}/users/register`, user);\r\n    // }\r\n\r\n    // delete(id: number) {\r\n    //     return this.http.delete(`${config.apiUrl}/users/${id}`);\r\n    // }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BodyComponent } from './body';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: BodyComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n// export const routingComponents = [BodyComponent];\r\n// ^ if we ever have multiple routes, this will enable\r\n// app.module.ts to import \"routingComponents\" rather than each individual component we route to\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './_services';\r\n\r\n/*\r\n\"Angular components can subscribe() to the public currentUser: Observable property \r\nto be notified of changes, and notifications are sent when the \r\nthis.currentUserSubject.next() method is called in the login() and logout() methods, \r\npassing the argument to each subscriber.\"\r\n*/\r\n\r\n@Component({\r\n  selector: 'app-root', //name of the <tag> that calls this component\r\n  templateUrl: './app.component.html', //file where <app-root> can be found\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  currentUser: any;\r\n  title = 'hie-fred'; //@hazel does this get used anywhere?? -alice\r\n  loggedIn = false; // how do we make this change?\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n) {\r\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n}\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n\r\n  //getDefaultData() //does this need to be here too? @","<!-- nav, from tutorial\r\n  This doesnt seem to be showing up?! TODO\r\n  maybe eventually put this within filterBox? -->\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\r\n  <!-- *ngIf=\"currentUser\" means the following only shows if loggedIn-->\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n  </div>\r\n</nav>\r\n\r\n<!-- main content container -->\r\n<div class=\"jumbotron\">\r\n  <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-8 offset-sm-2\">\r\n            \r\n              <router-outlet></router-outlet>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- primitive routing, from alice & hazel -->\r\n<div *ngIf=\"loggedIn==false\">\r\n    <loginComponent></loginComponent>\r\n  </div>\r\n\r\n  <div *ngIf=\"loggedIn==true\">\r\n    <app-body></app-body>\r\n  </div>\r\n\r\n<!-- i don't know if this does anything or where it came from -alice -->\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from \"@angular/forms\"\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { loginComponent } from './loginComponent/loginComponent.component';\r\nimport { BodyComponent } from './body/body.component';\r\nimport { FilterBoxComponent } from './filter-box/filter-box.component';\r\nimport { DataBasicComponent } from './data-basic/data-basic.component';\r\nimport { DataVisComponent } from './data-vis/data-vis.component';\r\nimport { fakeBackendProvider,JwtInterceptor,ErrorInterceptor } from './_helpers'; \r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n//@NgModule tag means this class is an Angular App Module, which groups together related components\r\n@NgModule({ \r\n  declarations: [\r\n    AppComponent,\r\n    loginComponent,\r\n    BodyComponent,\r\n    FilterBoxComponent,\r\n    DataBasicComponent,\r\n    DataVisComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n\r\n    fakeBackendProvider //TODO change this when\r\n\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { UserService, AuthenticationService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-body',\r\n  templateUrl: './body.component.html',\r\n  styleUrls: ['./body.component.css']\r\n})\r\nexport class BodyComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  users: import(\"../_models/user\").User[];\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private userService: UserService\r\n) {\r\n    this.currentUser = this.authenticationService.currentUserValue;\r\n}\r\n\r\nngOnInit() {\r\n    this.loadAllUsers();\r\n}\r\n\r\nprivate loadAllUsers() {\r\n  this.userService.getAll()\r\n      .pipe(first())\r\n      .subscribe(users => this.users = users);\r\n}\r\n\r\n}\r\n","<h1>Hi {{currentUser.firstName}}!</h1>\r\n<p>this is from body.component.html, which is calling the following 3 components</p>\r\n<!-- TODO:\r\n    filters: search, other filters\r\n    dataBasic: just the table\r\n    dataVis: bokeh etc-->\r\n    \r\n    <app-filter-box></app-filter-box>\r\n    <app-data-basic></app-data-basic>\r\n    <app-data-vis></app-data-vis>","export * from './body.component';","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-basic',\r\n  templateUrl: './data-basic.component.html',\r\n  styleUrls: ['./data-basic.component.css']\r\n})\r\nexport class DataBasicComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    //getDefaultData()\r\n    //how do i call this, its from veiws.py\r\n  }\r\n\r\n}","<p>this is from data-basic.component.html</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-vis',\r\n  templateUrl: './data-vis.component.html',\r\n  styleUrls: ['./data-vis.component.css']\r\n})\r\nexport class DataVisComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>this is from data-vis.component.html</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-box',\r\n  templateUrl: './filter-box.component.html',\r\n  styleUrls: ['./filter-box.component.css']\r\n})\r\nexport class FilterBoxComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>this is from filter-box.component.html</p>\r\n<!-- \r\n    search bar\r\n    check boxes for further filters (?)\r\n-->","import { Component, OnInit } from '@angular/core';\r\nimport { componentFactoryName } from '@angular/compiler'; //why is this here? @hazel\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services'\r\nimport { AlertService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'loginComponent', // inject with <loginComponent>...</loginComponent>\r\n  templateUrl: './loginComponent.component.html',\r\n  styleUrls: ['./loginComponent.component.css']\r\n})\r\nexport class loginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private alertService: AlertService\r\n  ) { \r\n    // redirect to body if already logged in\r\n    if (this.authenticationService.currentUserValue) { \r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n        username: ['', Validators.required],\r\n        password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n}\r\n\r\n// convenience getter for easy access to form fields\r\nget f() { return this.loginForm.controls; }\r\n\r\nonSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    if (this.loginForm.invalid) { //does Not catch usernames/pw that dont exist in backend\r\n        return;\r\n    }\r\n    \r\n    this.loading = true;\r\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n        .pipe(first())\r\n        .subscribe(\r\n            data => {\r\n                this.router.navigate([this.returnUrl]);\r\n            },\r\n            error => {\r\n                this.error = error;\r\n                this.loading = false;\r\n            });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n\r\n<div class=\"login-column\">\r\n\r\n<h2>SU High Impact Experiences Database Login</h2>\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\" >Password is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"button\"> \r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            LOGIN\r\n        </button>        \r\n    </div>\r\n    <!-- temporary link that routes directly from loginComponent to body\r\n    becasue authentication is unfinished and this doesn't seem like it'll actually get deployed anyway 4/13/20-->\r\n    <nav>\r\n        <a routerLink = \"/home\">dev: skip login</a>\r\n    </nav> \r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}